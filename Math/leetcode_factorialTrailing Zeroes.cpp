//末尾0的个数，就是看因子乘积中出现了多少个10
//10=2*5，因为因子中2的个数比5多的多
//10的个数就是5的个数，只要看因子中5出现了多少次
//n/5 包含了所有5的倍数的因子的个数，eg n =20 ,n/5 = 4.1到n中有4个数是5的倍数
//大部分5的倍数的数，只包含5一次，而25包含5两次，需要把25及25的倍数的数多加一次 ans += [n/25]
//同理125，再补上一个，总的公式就是
//ans = [n/5]+[n/25] + [n/125]+.... 直到k, n/(5^k) = 0
class Solution {
public:
    int trailingZeroes(int n) {
        int ret = 0;
        while(n)
        {
            ret += n/5;
            n/=5;
        }
        return ret;
    }
};
